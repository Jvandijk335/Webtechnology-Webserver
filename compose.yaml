name: WebTech Docker Compose Demo

services:
  producer:
    build:
      context: docker
      dockerfile: producer.Dockerfile
    depends_on:
      - webserver
  webserver:
    image: caddy:2-alpine
    ports:
      - 8080:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./src:/srv/src
      - ./docker/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config      
    depends_on:
      - cgi
      - db
  cgi:
    build:
      context: docker
      dockerfile: php-with-pgsql.Dockerfile
    env_file: .env
    volumes:
      - ./src:/srv/src
    depends_on:
      - db
  db:
    image: postgres:17-alpine
    user: postgres
    restart: always
    volumes:
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    env_file: .env
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  adminer:
    image: adminer
    ports:
      - 8888:8080
    depends_on:
      - db
volumes:
  db-data:
  caddy_data:
  caddy_config:
